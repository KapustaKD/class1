// –°–∏—Å—Ç–µ–º–∞ –ª–æ–∫–∞–ª—å–Ω–æ—ó –≥—Ä–∏ –∑ –±–æ—Ç–∞–º–∏
class BotGame extends EducationalPathGame {
    constructor() {
        super();
        this.bots = [];
        this.botResponses = this.initializeBotResponses();
        this.isBotTurn = false;
        this.botDelay = 1500; // –ó–∞—Ç—Ä–∏–º–∫–∞ –º—ñ–∂ —Ö–æ–¥–∞–º–∏ –±–æ—Ç—ñ–≤ (1.5 —Å–µ–∫—É–Ω–¥–∏)
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π –±–æ—Ç—ñ–≤ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å
    initializeBotResponses() {
        return {
            // –¢–≤–æ—Ä—á—ñ –∑–∞–≤–¥–∞–Ω–Ω—è
            creative: {
                great_pedagogical: [
                    "–í—á–∏—Ç–µ–ª—å: '–î—ñ—Ç–∏, —â–æ —Ç–∞–∫–µ —Ñ–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑?' –£—á–µ–Ω—å: '–¶–µ –∫–æ–ª–∏ —Ä–æ—Å–ª–∏–Ω–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—É—é—Ç—å—Å—è –Ω–∞ —Å–æ–Ω—Ü—ñ!'",
                    "–í—á–∏—Ç–µ–ª—å: '–•—Ç–æ –º–æ–∂–µ –ø–æ—è—Å–Ω–∏—Ç–∏ –∑–∞–∫–æ–Ω —Ç—è–∂—ñ–Ω–Ω—è?' –£—á–µ–Ω—å: '–¶–µ –∫–æ–ª–∏ —è–±–ª—É–∫–æ –ø–∞–¥–∞—î –Ω–∞ –≥–æ–ª–æ–≤—É –ù—å—é—Ç–æ–Ω—É!'",
                    "–í—á–∏—Ç–µ–ª—å: '–©–æ —Ç–∞–∫–µ –µ–≤–æ–ª—é—Ü—ñ—è?' –£—á–µ–Ω—å: '–¶–µ –∫–æ–ª–∏ –º–∞–≤–ø–∏ –ø–æ—Å—Ç—É–ø–æ–≤–æ —Å—Ç–∞—é—Ç—å –ª—é–¥—å–º–∏, –∞–ª–µ –¥–µ—è–∫—ñ –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è –º–∞–≤–ø–∞–º–∏!'",
                    "–í—á–∏—Ç–µ–ª—å: '–ü–æ—è—Å–Ω—ñ—Ç—å, —â–æ —Ç–∞–∫–µ –∞—Ç–æ–º.' –£—á–µ–Ω—å: '–¶–µ –¥—É–∂–µ –º–∞–ª–µ–Ω—å–∫–∞ —à—Ç—É–∫–∞, —è–∫—É –Ω–µ –≤–∏–¥–Ω–æ, –∞–ª–µ –≤–æ–Ω–∞ —î!'",
                    "–í—á–∏—Ç–µ–ª—å: '–©–æ —Ç–∞–∫–µ –≥—Ä–∞–≤—ñ—Ç–∞—Ü—ñ—è?' –£—á–µ–Ω—å: '–¶–µ —Ç–µ, —â–æ –Ω–µ –¥–∞—î –Ω–∞–º –ª—ñ—Ç–∞—Ç–∏, –∞–ª–µ –¥–æ–∑–≤–æ–ª—è—î –ø–∞–¥–∞—Ç–∏!'"
                ],
                story_continuation: [
                    "–Ü —Ä–∞–ø—Ç–æ–º –∑-–∑–∞ –∫—É—Ç–∞ –≤–∏—Å–∫–æ—á–∏–≤ –≤–µ–ª–µ—Ç–µ–Ω—Å—å–∫–∏–π –∫—Ä–æ–ª–∏–∫ –∑ –ø–∞—Ä–∞—Å–æ–ª—å–∫–æ—é...",
                    "–¢–æ–¥—ñ –≥–µ—Ä–æ–π –∑—Ä–æ–∑—É–º—ñ–≤, —â–æ –π–æ–≥–æ –∫–ª—é—á—ñ –∑–∞–≤–∂–¥–∏ –±—É–ª–∏ –≤ –∫–∏—à–µ–Ω—ñ...",
                    "–ê–ª–µ –Ω–∞–π—Ü—ñ–∫–∞–≤—ñ—à–µ –±—É–ª–æ —Ç–µ, —â–æ –¥—Ä–∞–∫–æ–Ω –≤–∏—è–≤–∏–≤—Å—è –≤–µ–≥–µ—Ç–∞—Ä—ñ–∞–Ω—Ü–µ–º...",
                    "–Ü –æ—Å—å —Ç—É—Ç –ø–æ—á–∞–ª–∞—Å—è –Ω–∞–π–¥–∏–≤–Ω—ñ—à–∞ —á–∞—Å—Ç–∏–Ω–∞ –ø—Ä–∏–≥–æ–¥–∏...",
                    "–ì–µ—Ä–æ–π –ø–æ–¥–∏–≤–∏–≤—Å—è –≤ –¥–∑–µ—Ä–∫–∞–ª–æ —ñ –∑—Ä–æ–∑—É–º—ñ–≤, —â–æ —Ü–µ –Ω–µ –≤—ñ–Ω..."
                ],
                poem_creation: [
                    "–ö–æ—Ç–∏–∫ —Å—ñ—Ä–∏–π –Ω–∞ –¥–∏–≤–∞–Ω—ñ,\n–°–ø–∏—Ç—å —ñ –±–∞—á–∏—Ç—å —Å–Ω–∏ –¥–∏–≤–Ω—ñ,\n–ú–∏—à—ñ —Ç–∞–Ω—Ü—é—é—Ç—å –≤–∞–ª—å—Å,\n–ê –≤—ñ–Ω —ó—Ö –Ω–µ –ª–æ–≤–∏—Ç—å –∑–æ–≤—Å—ñ–º!",
                    "–î–æ—â —ñ–¥–µ, –∞ —è –≤–¥–æ–º–∞,\n–ß–∏—Ç–∞—é –∫–Ω–∏–≥—É –ø—Ä–æ –¥—Ä–∞–∫–æ–Ω–∞,\n–†–∞–ø—Ç–æ–º —Å—Ç—É–∫ —É –¥–≤–µ—Ä—ñ - —Ö—Ç–æ?\n–ú–æ–∂–µ —Ü–µ –º—ñ–π –¥—Ä—É–≥ –ø—Ä–∏–π—à–æ–≤?",
                    "–ó—ñ—Ä–∫–∏ –≤ –Ω–µ–±—ñ –±–ª–∏—â–∞—Ç—å,\n–ú—ñ—Å—è—Ü—å —Å—Ä—ñ–±–ª–æ–º —Å–≤—ñ—Ç–∏—Ç—å,\n–ê —è —Å–∏–¥–∂—É —ñ –¥—É–º–∞—é,\n–©–æ –∑–∞–≤—Ç—Ä–∞ –±—É–¥–µ –∫—Ä–∞—â–µ –∂–∏—Ç—Ç—è!"
                ]
            },
            // PvP –∑–∞–≤–¥–∞–Ω–Ω—è
            pvp: {
                rock_paper_scissors: [
                    "–∫–∞–º—ñ–Ω—å", "–ø–∞–ø—ñ—Ä", "–Ω–æ–∂–∏—Ü—ñ"
                ],
                number_guessing: [
                    "–Ø –¥—É–º–∞—é —Ü–µ —á–∏—Å–ª–æ... 42!",
                    "–ú–∞–±—É—Ç—å —Ü–µ 17!",
                    "–°–ø—Ä–æ–±—É—é 88!",
                    "–ù–∞–ø–µ–≤–Ω–æ —Ü–µ 3!",
                    "–î—É–º–∞—é —Ü–µ 99!"
                ]
            },
            // –ó–∞–≤–¥–∞–Ω–Ω—è "–•—Ç–æ, –¥–µ, –∫–æ–ª–∏?"
            mad_libs: {
                responses: [
                    "–ö—ñ—Ç –Ω–∞ –¥–µ—Ä–µ–≤—ñ —á–∏—Ç–∞—î –∫–Ω–∏–≥—É",
                    "–°–ª–æ–Ω –≤ –±—ñ–±–ª—ñ–æ—Ç–µ—Ü—ñ –≥—Ä–∞—î –≤ —à–∞—Ö–∏",
                    "–ü—ñ–Ω–≥–≤—ñ–Ω –Ω–∞ –ø–ª—è–∂—ñ —Å–º–∞–∂–∏—Ç—å —à–∞—à–ª–∏–∫",
                    "–ñ–∏—Ä–∞—Ñ –≤ –∫–æ—Å–º–æ—Å—ñ —Ç–∞–Ω—Ü—é—î –≤–∞–ª—å—Å",
                    "–ö—Ä–æ–∫–æ–¥–∏–ª –≤ –∫–∞—Ñ–µ –ø'—î –∫–∞–≤—É"
                ]
            },
            // –í–µ–±-–Ω–æ–≤–µ–ª–∞
            webnovella: {
                responses: [
                    "–ì–µ—Ä–æ–π –≤–∏—Ä—ñ—à–∏–≤ –ø—ñ—Ç–∏ –ª—ñ–≤–∏–º —à–ª—è—Ö–æ–º",
                    "–ì–µ—Ä–æ–π –æ–±—Ä–∞–≤ –ø—Ä–∞–≤–∏–π —à–ª—è—Ö",
                    "–ì–µ—Ä–æ–π –∑–∞–ª–∏—à–∏–≤—Å—è –Ω–∞ –º—ñ—Å—Ü—ñ",
                    "–ì–µ—Ä–æ–π –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –Ω–∞–∑–∞–¥",
                    "–ì–µ—Ä–æ–π –ø—ñ—à–æ–≤ –ø—Ä—è–º–æ"
                ]
            }
        };
    }

    // –ü–æ—á–∞—Ç–æ–∫ –ª–æ–∫–∞–ª—å–Ω–æ—ó –≥—Ä–∏
    startLocalBotGame() {
        console.log('üéÆ –ü–æ—á–∏–Ω–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω—É –≥—Ä—É');
        
        // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –≤–∏–±–æ—Ä—É –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≥—Ä–∞–≤—Ü—ñ–≤
        this.showPlayerCountModal();
    }

    // –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –≤–∏–±–æ—Ä—É –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≥—Ä–∞–≤—Ü—ñ–≤
    showPlayerCountModal() {
        const modalContent = `
            <h2 class="text-3xl font-bold mb-4 text-center">–õ–æ–∫–∞–ª—å–Ω–∞ –≥—Ä–∞</h2>
            <p class="text-center mb-6">–û–±–µ—Ä—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥—Ä–∞–≤—Ü—ñ–≤:</p>
            <div class="flex gap-4 justify-center mb-6">
                <button id="bot-2-players" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 px-6 rounded-lg transition duration-300 text-xl">
                    2 –≥—Ä–∞–≤—Ü—ñ
                </button>
                <button id="bot-3-players" class="bg-green-500 hover:bg-green-600 text-white font-bold py-3 px-6 rounded-lg transition duration-300 text-xl">
                    3 –≥—Ä–∞–≤—Ü—ñ
                </button>
            </div>
            <p class="text-sm text-gray-600 text-center">–Ü–Ω—à—ñ –≥—Ä–∞–≤—Ü—ñ –±—É–¥—É—Ç—å –≥—Ä–∞—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ</p>
        `;

        this.showQuestModal('–õ–æ–∫–∞–ª—å–Ω–∞ –≥—Ä–∞', modalContent, [
            { text: '–°–∫–∞—Å—É–≤–∞—Ç–∏', callback: () => this.questModal.classList.add('hidden') }
        ]);

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –∫–Ω–æ–ø–æ–∫
        setTimeout(() => {
            document.getElementById('bot-2-players').addEventListener('click', () => {
                this.questModal.classList.add('hidden');
                this.initializeGame(2);
            });
            
            document.getElementById('bot-3-players').addEventListener('click', () => {
                this.questModal.classList.add('hidden');
                this.initializeGame(3);
            });
        }, 100);
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥—Ä–∏ –∑ –≤–∫–∞–∑–∞–Ω–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é –≥—Ä–∞–≤—Ü—ñ–≤
    initializeGame(playerCount) {
        console.log(`üéÆ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –≥—Ä—É –∑ ${playerCount} –≥—Ä–∞–≤—Ü—è–º–∏`);
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ –≥—Ä–∞–≤—Ü—ñ–≤
        this.players = [];
        this.bots = [];
        
        // –î–æ–¥–∞—î–º–æ –ª—é–¥–∏–Ω—É-–≥—Ä–∞–≤—Ü—è
        this.players.push({
            id: 'human-player',
            name: '–í–∏',
            position: 0,
            points: 0,
            class: null,
            color: this.playerColors[0],
            avatarUrl: null,
            isBot: false,
            hasWon: false,
            hasLost: false
        });

        // –î–æ–¥–∞—î–º–æ —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤
        const playerNames = ['–ê–ª–µ–∫—Å', '–ú–∞–∫—Å', '–°–æ—Ñ—ñ—è', '–î–∞–Ω—ñ–µ–ª—å'];
        for (let i = 1; i < playerCount; i++) {
            const bot = {
                id: `bot-${i}`,
                name: playerNames[i - 1],
                position: 0,
                points: 0,
                class: null,
                color: this.playerColors[i],
                avatarUrl: null,
                isBot: true,
                hasWon: false,
                hasLost: false
            };
            this.players.push(bot);
            this.bots.push(bot);
        }

        // –†–æ–∑–¥–∞—î–º–æ –∫–ª–∞—Å–∏ –≤–∏–ø–∞–¥–∫–æ–≤–æ
        this.assignRandomClasses();
        
        // –ü–æ–∫–∞–∑—É—î–º–æ —Ä–æ–∑–¥–∞—á—É –∫–ª–∞—Å—ñ–≤
        this.showClassAssignment();
    }

    // –†–æ–∑–¥–∞—á–∞ –≤–∏–ø–∞–¥–∫–æ–≤–∏—Ö –∫–ª–∞—Å—ñ–≤
    assignRandomClasses() {
        const shuffledClasses = [...this.playerClasses].sort(() => Math.random() - 0.5);
        
        this.players.forEach((player, index) => {
            player.class = shuffledClasses[index];
            console.log(`${player.name} –æ—Ç—Ä–∏–º–∞–≤ –∫–ª–∞—Å: ${player.class.name}`);
        });
    }

    // –ü–æ–∫–∞–∑ —Ä–æ–∑–¥–∞—á—ñ –∫–ª–∞—Å—ñ–≤
    showClassAssignment() {
        let classInfo = '<h3 class="text-2xl font-bold mb-4">–†–æ–∑–¥–∞—á–∞ –∫–ª–∞—Å—ñ–≤:</h3>';
        
        this.players.forEach(player => {
            classInfo += `
                <div class="mb-2 p-2 bg-gray-100 rounded">
                    <strong>${player.name}:</strong> ${player.class.name} 
                    (–°—Ç–∞—Ä—Ç: ${player.class.startPoints} –û–û, –ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ä—É—Ö—É: ${player.class.moveModifier > 0 ? '+' : ''}${player.class.moveModifier})
                </div>
            `;
        });

        this.showQuestModal('–ö–ª–∞—Å–∏ —Ä–æ–∑–¥–∞–Ω–æ!', classInfo, [
            { text: '–ü–æ—á–∞—Ç–∏ –≥—Ä—É!', callback: () => {
                this.questModal.classList.add('hidden');
                this.startBotGame();
            }}
        ]);
    }

    // –ü–æ—á–∞—Ç–æ–∫ –≥—Ä–∏
    startBotGame() {
        console.log('üéÆ –ü–æ—á–∏–Ω–∞—î–º–æ –≥—Ä—É');
        
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—ñ –æ—á–∫–∏
        this.players.forEach(player => {
            player.points = player.class.startPoints;
        });

        // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ
        this.showGameContainer();
        
        // –û–Ω–æ–≤–ª—é—î–º–æ UI
        this.updateUI();
        
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–µ—Ä—à–æ–≥–æ –≥—Ä–∞–≤—Ü—è
        this.currentPlayerIndex = 0;
        this.gameActive = true;
        
        // –Ø–∫—â–æ –ø–µ—Ä—à–∏–π —Ö—ñ–¥ —ñ–Ω—à–æ–≥–æ –≥—Ä–∞–≤—Ü—è, –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∫–∏–¥–∞—î–º–æ –∫—É–±–∏–∫
        if (this.players[this.currentPlayerIndex].isBot) {
            setTimeout(() => {
                this.handleBotTurn();
            }, 1000);
        }
    }

    // –û–±—Ä–æ–±–∫–∞ —Ö–æ–¥—É —ñ–Ω—à–æ–≥–æ –≥—Ä–∞–≤—Ü—è
    async handleBotTurn() {
        const currentPlayer = this.players[this.currentPlayerIndex];
        
        if (!currentPlayer.isBot || !this.gameActive) {
            return;
        }

        console.log(`üéÆ –•—ñ–¥ –≥—Ä–∞–≤—Ü—è: ${currentPlayer.name}`);
        
        // –ö–∏–¥–∞—î–º–æ –∫—É–±–∏–∫ –¥–ª—è –≥—Ä–∞–≤—Ü—è
        await this.botRollDice();
    }

    // –ö–∏–¥–∞–Ω–Ω—è –∫—É–±–∏–∫–∞ —ñ–Ω—à–∏–º –≥—Ä–∞–≤—Ü–µ–º
    async botRollDice() {
        const player = this.players[this.currentPlayerIndex];
        
        console.log(`üéÆ ${player.name} –∫–∏–¥–∞—î –∫—É–±–∏–∫`);
        
        // –í—ñ–¥—Ç–≤–æ—Ä—é—î–º–æ –∑–≤—É–∫ –∫—É–±–∏–∫–∞
        this.playDiceSound();
        
        // –ö–∏–¥–∞—î–º–æ –∫—É–±–∏–∫
        const roll = Math.floor(Math.random() * 6) + 1;
        let move = roll + player.class.moveModifier + player.moveModifier;
        
        if (player.class.id === 'peasant') {
            move = Math.max(1, move);
        }

        console.log(`üéÆ ${player.name} –∫–∏–Ω—É–≤ ${roll}, —Ä—É—Ö: ${move}`);

        // –ü–æ–∫–∞–∑—É—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –∫—É–±–∏–∫–∞
        const rotations = {
            1: 'rotateY(0deg)',
            2: 'rotateY(-90deg)',
            3: 'rotateY(-180deg)',
            4: 'rotateY(90deg)',
            5: 'rotateX(-90deg)',
            6: 'rotateX(90deg)'
        };

        this.diceInner.style.transform = `rotateX(${Math.random()*360}deg) rotateY(${Math.random()*360}deg)`;
        
        setTimeout(async () => {
            this.diceInner.style.transform = `${rotations[roll]} translateZ(40px)`;
            
            // –†—É—Ö–∞—î–º–æ –≥—Ä–∞–≤—Ü—è
            await this.movePlayer(player, move);
            
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ–¥—ñ—ó
            this.checkCell(player);
            
        }, 1000);
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ–¥—ñ–π –Ω–∞ –∫–ª—ñ—Ç–∏–Ω—Ü—ñ (–ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤)
    checkCell(player) {
        const cellData = this.specialCells[player.position];
        
        if (cellData) {
            console.log(`üéÆ ${player.name} –ø–æ—Ç—Ä–∞–ø–∏–≤ –Ω–∞ –ø–æ–¥—ñ—é: ${cellData.type}`);
            
            if (player.isBot) {
                // –î–ª—è —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤ –æ–±—Ä–æ–±–ª—è—î–º–æ –ø–æ–¥—ñ—ó –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
                this.handleBotEvent(player, cellData);
            } else {
                // –î–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥—Ä–∞–≤—Ü—è –ø–æ–∫–∞–∑—É—î–º–æ –∑–≤–∏—á–∞–π–Ω–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
                this.handleSpecialCell(player, cellData);
            }
        } else {
            // –Ø–∫—â–æ –ø–æ–¥—ñ—ó –Ω–µ–º–∞—î, –ø–µ—Ä–µ–¥–∞—î–º–æ —Ö—ñ–¥
            setTimeout(() => {
                this.nextTurn();
            }, this.botDelay);
        }
    }

    // –û–±—Ä–æ–±–∫–∞ –ø–æ–¥—ñ–π –¥–ª—è —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤
    handleBotEvent(player, cellData) {
        console.log(`üéÆ ${player.name} –æ–±—Ä–æ–±–ª—è—î –ø–æ–¥—ñ—é: ${cellData.type}`);
        
        switch (cellData.type) {
            case 'simple':
                this.handleBotSimpleQuest(player);
                break;
            case 'pvp':
            case 'pvp-quest':
                this.handleBotPvpQuest(player);
                break;
            case 'creative':
            case 'creative-quest':
                this.handleBotCreativeQuest(player);
                break;
            case 'mad-libs':
            case 'mad-libs-quest':
                this.handleBotMadLibs(player);
                break;
            case 'webnovella':
            case 'webnovella-quest':
                this.handleBotWebnovella(player);
                break;
            case 'alternative-path':
                this.handleBotAlternativePath(player, cellData);
                break;
            case 'reincarnation':
                this.handleBotReincarnation(player, cellData);
                break;
            case 'machine-uprising':
                this.handleBotMachineUprising(player);
                break;
            default:
                // –Ø–∫—â–æ –Ω–µ–≤—ñ–¥–æ–º–∞ –ø–æ–¥—ñ—è, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞—î–º–æ —Ö—ñ–¥
                setTimeout(() => {
                    this.nextTurn();
                }, this.botDelay);
        }
    }

    // –û–±—Ä–æ–±–∫–∞ –ø—Ä–æ—Å—Ç–∏—Ö –∫–≤–µ—Å—Ç—ñ–≤ –¥–ª—è —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤
    handleBotSimpleQuest(player) {
        const simpleQuests = [
            { title: '–ó–Ω–∞–π—à–æ–≤ —Å—Ç–∞—Ä–æ–≤–∏–Ω–Ω—É –∫–Ω–∏–≥—É!', reward: 15, description: '–ì—Ä–∞–≤–µ—Ü—å –∑–Ω–∞–π—à–æ–≤ —Ü—ñ–Ω–Ω—É –∫–Ω–∏–≥—É –≤ –±—ñ–±–ª—ñ–æ—Ç–µ—Ü—ñ.' },
            { title: '–î–æ–ø–æ–º—ñ–≥ –≤—á–∏—Ç–µ–ª—é!', reward: 20, description: '–ì—Ä–∞–≤–µ—Ü—å –¥–æ–ø–æ–º—ñ–≥ –≤—á–∏—Ç–µ–ª—é –∑ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—î—é —É—Ä–æ–∫—É.' },
            { title: '–í–∏–≤—á–∏–≤ –Ω–æ–≤—É –º–æ–≤—É!', reward: 25, description: '–ì—Ä–∞–≤–µ—Ü—å —É—Å–ø—ñ—à–Ω–æ –≤–∏–≤—á–∏–≤ –æ—Å–Ω–æ–≤–∏ –Ω–æ–≤–æ—ó –º–æ–≤–∏.' },
            { title: '–°—Ç–≤–æ—Ä–∏–≤ –Ω–∞—É–∫–æ–≤–∏–π –ø—Ä–æ–µ–∫—Ç!', reward: 30, description: '–ü—Ä–æ–µ–∫—Ç –≥—Ä–∞–≤—Ü—è –æ—Ç—Ä–∏–º–∞–≤ –≤–∏–∑–Ω–∞–Ω–Ω—è.' },
            { title: '–ü–µ—Ä–µ–º—ñ–≥ —É –æ–ª—ñ–º–ø—ñ–∞–¥—ñ!', reward: 40, description: '–ì—Ä–∞–≤–µ—Ü—å –ø–æ—Å—ñ–≤ –ø–µ—Ä—à–µ –º—ñ—Å—Ü–µ –≤ –æ–ª—ñ–º–ø—ñ–∞–¥—ñ.' }
        ];

        const quest = simpleQuests[Math.floor(Math.random() * simpleQuests.length)];
        
        this.updatePoints(player, quest.reward, quest.title);
        
        // –ü–æ–∫–∞–∑—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –ª—é–¥–∏–Ω–∏
        this.showQuestModal(`${player.name} - ${quest.title}`, 
            `${quest.description}\n\n–û—Ç—Ä–∏–º–∞–Ω–æ: +${quest.reward} –û–û`, [
                { text: '–î–∞–ª—ñ', callback: () => {
                    this.questModal.classList.add('hidden');
                    setTimeout(() => this.nextTurn(), 500);
                }}
            ]);
    }

    // –û–±—Ä–æ–±–∫–∞ —Ç–≤–æ—Ä—á–∏—Ö –∫–≤–µ—Å—Ç—ñ–≤ –¥–ª—è —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤
    handleBotCreativeQuest(player) {
        const creativeTypes = Object.keys(this.botResponses.creative);
        const selectedType = creativeTypes[Math.floor(Math.random() * creativeTypes.length)];
        const responses = this.botResponses.creative[selectedType];
        const botResponse = responses[Math.floor(Math.random() * responses.length)];

        console.log(`üéÆ ${player.name} –≤—ñ–¥–ø–æ–≤—ñ–≤ –Ω–∞ —Ç–≤–æ—Ä—á–µ –∑–∞–≤–¥–∞–Ω–Ω—è: ${botResponse}`);

        // –ü–æ–∫–∞–∑—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≥—Ä–∞–≤—Ü—è
        this.showQuestModal(`${player.name} - –¢–≤–æ—Ä—á–µ –∑–∞–≤–¥–∞–Ω–Ω—è`, 
            `–ì—Ä–∞–≤–µ—Ü—å –≤—ñ–¥–ø–æ–≤—ñ–≤:\n\n"${botResponse}"`, [
                { text: '–î–∞–ª—ñ', callback: () => {
                    this.questModal.classList.add('hidden');
                    setTimeout(() => this.nextTurn(), 500);
                }}
            ]);
    }

    // –û–±—Ä–æ–±–∫–∞ PvP –∫–≤–µ—Å—Ç—ñ–≤ –¥–ª—è —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤
    handleBotPvpQuest(player) {
        // –í–∏–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –æ–ø–æ–Ω–µ–Ω—Ç–∞ (–Ω–µ —ñ–Ω—à–æ–≥–æ –≥—Ä–∞–≤—Ü—è)
        const opponents = this.players.filter(p => !p.isBot && p.id !== player.id);
        
        if (opponents.length === 0) {
            // –Ø–∫—â–æ –Ω–µ–º–∞—î –æ–ø–æ–Ω–µ–Ω—Ç—ñ–≤, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–æ–¥—ñ—é
            setTimeout(() => this.nextTurn(), this.botDelay);
            return;
        }

        const opponent = opponents[Math.floor(Math.random() * opponents.length)];
        
        // –ì—Ä–∞–≤–µ—Ü—å –∑–∞–≤–∂–¥–∏ –≤–∏–≥—Ä–∞—î –≤ PvP (–¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç–∏)
        this.updatePoints(player, 30, `–ü–µ—Ä–µ–º—ñ–≥ ${opponent.name} –≤ –¥—É–µ–ª—ñ`);
        
        this.showQuestModal(`${player.name} - PvP –î—É–µ–ª—å`, 
            `${player.name} –≤–∏–∫–ª–∏–∫–∞–≤ –Ω–∞ –¥—É–µ–ª—å ${opponent.name} —ñ –ø–µ—Ä–µ–º—ñ–≥!\n\n–û—Ç—Ä–∏–º–∞–Ω–æ: +30 –û–û`, [
                { text: '–î–∞–ª—ñ', callback: () => {
                    this.questModal.classList.add('hidden');
                    setTimeout(() => this.nextTurn(), 500);
                }}
            ]);
    }

    // –û–±—Ä–æ–±–∫–∞ "–•—Ç–æ, –¥–µ, –∫–æ–ª–∏?" –¥–ª—è —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤
    handleBotMadLibs(player) {
        const responses = this.botResponses.mad_libs.responses;
        const botResponse = responses[Math.floor(Math.random() * responses.length)];

        this.showQuestModal(`${player.name} - –•—Ç–æ, –¥–µ, –∫–æ–ª–∏?`, 
            `–ì—Ä–∞–≤–µ—Ü—å –≤—ñ–¥–ø–æ–≤—ñ–≤:\n\n"${botResponse}"`, [
                { text: '–î–∞–ª—ñ', callback: () => {
                    this.questModal.classList.add('hidden');
                    setTimeout(() => this.nextTurn(), 500);
                }}
            ]);
    }

    // –û–±—Ä–æ–±–∫–∞ –≤–µ–±-–Ω–æ–≤–µ–ª–∞ –¥–ª—è —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤
    handleBotWebnovella(player) {
        const responses = this.botResponses.webnovella.responses;
        const botResponse = responses[Math.floor(Math.random() * responses.length)];

        this.showQuestModal(`${player.name} - –í–µ–±-–Ω–æ–≤–µ–ª–∞`, 
            `–ì—Ä–∞–≤–µ—Ü—å –æ–±—Ä–∞–≤:\n\n"${botResponse}"`, [
                { text: '–î–∞–ª—ñ', callback: () => {
                    this.questModal.classList.add('hidden');
                    setTimeout(() => this.nextTurn(), 500);
                }}
            ]);
    }

    // –û–±—Ä–æ–±–∫–∞ –æ–±—Ö—ñ–¥–Ω–æ–≥–æ —à–ª—è—Ö—É –¥–ª—è —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤
    handleBotAlternativePath(player, cellData) {
        // –ì—Ä–∞–≤–µ—Ü—å –∑–∞–≤–∂–¥–∏ –≤–∏–±–∏—Ä–∞—î "–¢–∞–∫" (—Ä–∏–∑–∏–∫—É—î)
        this.updatePoints(player, -cellData.cost, `–í–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ –æ–±—Ö—ñ–¥–Ω–∏–π —à–ª—è—Ö`);
        this.movePlayerTo(player, cellData.target);
        
        this.showQuestModal(`${player.name} - –û–±—Ö—ñ–¥–Ω–∏–π —à–ª—è—Ö`, 
            `${player.name} –≤–∏—Ä—ñ—à–∏–≤ —Ä–∏–∑–∏–∫–Ω—É—Ç–∏ —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –æ–±—Ö—ñ–¥–Ω–∏–π —à–ª—è—Ö!\n\n–°–ø–ª–∞—á–µ–Ω–æ: ${cellData.cost} –û–û\n–ü–µ—Ä–µ–º—ñ—â–µ–Ω–æ –Ω–∞ –∫–ª—ñ—Ç–∏–Ω–∫—É: ${cellData.target}`, [
                { text: '–î–∞–ª—ñ', callback: () => {
                    this.questModal.classList.add('hidden');
                    setTimeout(() => this.nextTurn(), 500);
                }}
            ]);
    }

    // –û–±—Ä–æ–±–∫–∞ —Ä–µ—ñ–Ω–∫–∞—Ä–Ω–∞—Ü—ñ—ó –¥–ª—è —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤
    handleBotReincarnation(player, cellData) {
        // –ì—Ä–∞–≤–µ—Ü—å –∑–∞–≤–∂–¥–∏ –ø–æ–≥–æ–¥–∂—É—î—Ç—å—Å—è –Ω–∞ —Ä–µ—ñ–Ω–∫–∞—Ä–Ω–∞—Ü—ñ—é
        const newClass = this.playerClasses[cellData.nextEpoch - 1];
        player.class = newClass;
        player.points = cellData.points;
        
        this.showQuestModal(`${player.name} - –†–µ—ñ–Ω–∫–∞—Ä–Ω–∞—Ü—ñ—è`, 
            `${player.name} –ø–æ–≥–æ–¥–∏–≤—Å—è –Ω–∞ —Ä–µ—ñ–Ω–∫–∞—Ä–Ω–∞—Ü—ñ—é!\n\n–ù–æ–≤–∏–π –∫–ª–∞—Å: ${newClass.name}\n–ù–æ–≤—ñ –æ—á–∫–∏: ${cellData.points} –û–û`, [
                { text: '–î–∞–ª—ñ', callback: () => {
                    this.questModal.classList.add('hidden');
                    setTimeout(() => this.nextTurn(), 500);
                }}
            ]);
    }

    // –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—Å—Ç–∞–Ω–Ω—è –º–∞—à–∏–Ω –¥–ª—è —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤
    handleBotMachineUprising(player) {
        // –ì—Ä–∞–≤–µ—Ü—å –∑–∞–≤–∂–¥–∏ –≤–∏–±–∏—Ä–∞—î "–ë–æ—Ä–æ—Ç–∏—Å—è"
        const fightResult = Math.random() < 0.7; // 70% —à–∞–Ω—Å –ø–µ—Ä–µ–º–æ–≥–∏
        
        if (fightResult) {
            this.updatePoints(player, 100, `–ü–µ—Ä–µ–º—ñ–≥ —É –ø–æ–≤—Å—Ç–∞–Ω–Ω—ñ –º–∞—à–∏–Ω`);
            this.showQuestModal(`${player.name} - –ü–æ–≤—Å—Ç–∞–Ω–Ω—è –º–∞—à–∏–Ω`, 
                `${player.name} –≤–∏—Ä—ñ—à–∏–≤ –±–æ—Ä–æ—Ç–∏—Å—è —ñ –ø–µ—Ä–µ–º—ñ–≥!\n\n–û—Ç—Ä–∏–º–∞–Ω–æ: +100 –û–û`, [
                    { text: '–î–∞–ª—ñ', callback: () => {
                        this.questModal.classList.add('hidden');
                        setTimeout(() => this.nextTurn(), 500);
                    }}
                ]);
        } else {
            this.updatePoints(player, -50, `–ü—Ä–æ–≥—Ä–∞–≤ —É –ø–æ–≤—Å—Ç–∞–Ω–Ω—ñ –º–∞—à–∏–Ω`);
            this.showQuestModal(`${player.name} - –ü–æ–≤—Å—Ç–∞–Ω–Ω—è –º–∞—à–∏–Ω`, 
                `${player.name} –≤–∏—Ä—ñ—à–∏–≤ –±–æ—Ä–æ—Ç–∏—Å—è, –∞–ª–µ –ø—Ä–æ–≥—Ä–∞–≤!\n\n–í—Ç—Ä–∞—á–µ–Ω–æ: -50 –û–û`, [
                    { text: '–î–∞–ª—ñ', callback: () => {
                        this.questModal.classList.add('hidden');
                        setTimeout(() => this.nextTurn(), 500);
                    }}
                ]);
        }
    }

    // –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–∏–π –º–µ—Ç–æ–¥ nextTurn –¥–ª—è —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤
    nextTurn() {
        if (!this.gameActive) return;

        const player = this.players[this.currentPlayerIndex];

        if (player.extraTurn) {
            player.extraTurn = false;
            this.rollDiceBtn.disabled = false;
            return;
        }

        if (player.skipTurn) {
            player.skipTurn = false;
            this.showQuestModal('–ü—Ä–æ–ø—É—Å–∫ —Ö–æ–¥—É', `${player.name} –ø—Ä–æ–ø—É—Å–∫–∞—î —Ü–µ–π —Ö—ñ–¥ —á–µ—Ä–µ–∑ –ø–æ–¥—ñ—é.`, [
                { text: '–ó—Ä–æ–∑—É–º—ñ–ª–æ', callback: () => { 
                    this.questModal.classList.add('hidden'); 
                    setTimeout(() => this.nextTurn(), 500);
                }}
            ]);
            return;
        }

        do {
            this.currentPlayerIndex = (this.currentPlayerIndex + 1) % this.players.length;
        } while (this.players[this.currentPlayerIndex].hasLost);

        this.updateUI();

        const nextPlayer = this.players[this.currentPlayerIndex];
        
        if (nextPlayer.isBot) {
            // –Ø–∫—â–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –≥—Ä–∞–≤–µ—Ü—å - —ñ–Ω—à–∏–π –≥—Ä–∞–≤–µ—Ü—å, –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∫–∏–¥–∞—î–º–æ –∫—É–±–∏–∫
            this.rollDiceBtn.disabled = true;
            setTimeout(() => {
                this.handleBotTurn();
            }, this.botDelay);
        } else {
            // –Ø–∫—â–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –≥—Ä–∞–≤–µ—Ü—å - –æ—Å–Ω–æ–≤–Ω–∏–π –≥—Ä–∞–≤–µ—Ü—å, –¥–æ–∑–≤–æ–ª—è—î–º–æ –∫–∏–Ω—É—Ç–∏ –∫—É–±–∏–∫
            this.rollDiceBtn.disabled = false;
        }
    }

    // –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–∏–π –º–µ—Ç–æ–¥ rollTheDice –¥–ª—è —ñ–Ω—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤
    async rollTheDice() {
        const currentPlayer = this.players[this.currentPlayerIndex];
        
        if (currentPlayer.isBot) {
            // –Ü–Ω—à—ñ –≥—Ä–∞–≤—Ü—ñ –Ω–µ –º–æ–∂—É—Ç—å –∫–∏–¥–∞—Ç–∏ –∫—É–±–∏–∫ –≤—Ä—É—á–Ω—É
            return;
        }
        
        // –í–∏–∫–ª–∏–∫–∞—î–º–æ –±–∞–∑–æ–≤–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥—Ä–∞–≤—Ü—è
        await super.rollTheDice();
    }

    // –ü–æ–∫–∞–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≥—Ä–∏
    showGameContainer() {
        document.getElementById('game-container').classList.remove('hidden');
        document.getElementById('mode-selection').classList.add('hidden');
        document.getElementById('online-panel').classList.add('hidden');
    }
}

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –∫–ª–∞—Å –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
if (typeof module !== 'undefined' && module.exports) {
    module.exports = BotGame;
}
